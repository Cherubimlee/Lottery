<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDescription" xml:space="preserve">
    <value>Let‘s Lucky Draw, who is the next winner?</value>
    <comment>Let‘s Lucky Draw, who is the next winner?</comment>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Let‘s Lucky Draw</value>
    <comment>Let‘s Lucky Draw</comment>
  </data>
  <data name="CommandBarCapacity.Label" xml:space="preserve">
    <value>Round Capacity</value>
    <comment>Round Capacity</comment>
  </data>
  <data name="CommandBarCapacitySwitch.OffContent" xml:space="preserve">
    <value>Don't Apply Round Capacity</value>
    <comment>Don't Apply Round Capacity</comment>
  </data>
  <data name="CommandBarCapacitySwitch.OnContent" xml:space="preserve">
    <value>Apply Round Capacity</value>
    <comment>Apply Round Capacity</comment>
  </data>
  <data name="CommandBarNext.Label" xml:space="preserve">
    <value>Next</value>
    <comment>Next</comment>
  </data>
  <data name="CommandBarPlay.Label" xml:space="preserve">
    <value>Start</value>
    <comment>Start</comment>
  </data>
  <data name="CommandBarReset.Label" xml:space="preserve">
    <value>Reset</value>
    <comment>Reset</comment>
  </data>
  <data name="CommandBarShare.Label" xml:space="preserve">
    <value>Report</value>
    <comment>Report</comment>
  </data>
  <data name="CommandBarStop.Label" xml:space="preserve">
    <value>Stop</value>
    <comment>Stop</comment>
  </data>
  <data name="ContentDialog_ResetAll_NO" xml:space="preserve">
    <value>Not Now</value>
    <comment>Not Now</comment>
  </data>
  <data name="ContentDialog_ResetAll_OK" xml:space="preserve">
    <value>Restart</value>
    <comment>Restart</comment>
  </data>
  <data name="DataSetting_Dialog_Contiune" xml:space="preserve">
    <value>Contiune</value>
    <comment>Contiune</comment>
  </data>
  <data name="DataSetting_Dialog_Error" xml:space="preserve">
    <value>Error</value>
    <comment>Error</comment>
  </data>
  <data name="DataSetting_Dialog_Exceed" xml:space="preserve">
    <value>This file exceed 200 contents limitation, please check the file again.</value>
    <comment>This file exceed 200 contents limitation, please check the file again.</comment>
  </data>
  <data name="DataSetting_Dialog_FileError" xml:space="preserve">
    <value>We are unable to read the file, please check the file format!</value>
    <comment>We are unable to read the file, please check the file format!</comment>
  </data>
  <data name="DataSetting_Dialog_No" xml:space="preserve">
    <value>No</value>
    <comment>No</comment>
  </data>
  <data name="DataSetting_Dialog_Ok" xml:space="preserve">
    <value>OK</value>
    <comment>OK</comment>
  </data>
  <data name="DataSetting_Dialog_Reload" xml:space="preserve">
    <value>The changes will reload data source and clear all current draw history, do you want to continue?</value>
    <comment>The changes will reload data source and clear all current draw history, do you want to continue?</comment>
  </data>
  <data name="DataSetting_Dialog_Warning" xml:space="preserve">
    <value>Warning</value>
    <comment>Warning</comment>
  </data>
  <data name="DataSetting_FileHelper.Content" xml:space="preserve">
    <value>Start from a example file</value>
    <comment>Start from a example file</comment>
  </data>
  <data name="DataSetting_FileOption.Text" xml:space="preserve">
    <value>Import from a comma delimited CSV file (UTF-8)</value>
    <comment>Import from a comma delimited CSV file (UTF-8)</comment>
  </data>
  <data name="DataSetting_FileType" xml:space="preserve">
    <value>Comma delimited CSV (UTF-8)</value>
    <comment>Comma delimited CSV (UTF-8)</comment>
  </data>
  <data name="DataSetting_NumberOption.Text" xml:space="preserve">
    <value>Import from generated number set</value>
    <comment>Import from generated number set</comment>
  </data>
  <data name="DataSetting_PrefixLabel.Header" xml:space="preserve">
    <value>Prefix Label</value>
    <comment>Prefix Label</comment>
  </data>
  <data name="DataSetting_PrefixLabel.PlaceholderText" xml:space="preserve">
    <value>Prefix of number, e.g “Guest 001”</value>
    <comment>Prefix of number, e.g “Guest 001”</comment>
  </data>
  <data name="FTUE_Intro_Img" xml:space="preserve">
    <value>Pick your favorite wallpaper. 
You can import any image from your PC.</value>
    <comment>Pick your favorite wallpaper. 
You can import any image from your PC.</comment>
  </data>
  <data name="FTUE_Intro_Menu" xml:space="preserve">
    <value>Access the settings from menu.
Make your own lucky draw event.</value>
    <comment>Access the settings from menu. 
Make your own lucky draw event.</comment>
  </data>
  <data name="FTUE_Intro_Report" xml:space="preserve">
    <value>Don't miss your report.</value>
    <comment>Don't miss your report.</comment>
  </data>
  <data name="FTUE_Intro_Round" xml:space="preserve">
    <value>Rule your round.</value>
    <comment>Rule your round.</comment>
  </data>
  <data name="FTUE_OK.Text" xml:space="preserve">
    <value>I got it</value>
    <comment>I got t</comment>
  </data>
  <data name="FTUE_Title_Highlights" xml:space="preserve">
    <value>All Highlights</value>
    <comment>All Highlights</comment>
  </data>
  <data name="FTUE_Title_New" xml:space="preserve">
    <value>What's new</value>
    <comment>What's new</comment>
  </data>
  <data name="InfoBaar_Starting" xml:space="preserve">
    <value>Starting {0} | {1}</value>
    <comment>Starting {0} | {1}</comment>
  </data>
  <data name="InfoBar_Capacity_Applied" xml:space="preserve">
    <value>Applied Group Capacity {0}</value>
    <comment>Applied Group Capacity {0}</comment>
  </data>
  <data name="InfoBar_Capacity_FreeDraw" xml:space="preserve">
    <value>Free Draw</value>
    <comment>Free Draw</comment>
  </data>
  <data name="InfoBar_Default" xml:space="preserve">
    <value>{0} | {1}</value>
    <comment>{0} | {1}</comment>
  </data>
  <data name="InfoBar_DrawInfo_Capacity" xml:space="preserve">
    <value>{0} out of {1} Lucky Winner(s)</value>
    <comment>{0} out of {1} Lucky Winner(s)</comment>
  </data>
  <data name="InfoBar_DrawInfo_FreeDraw" xml:space="preserve">
    <value>{0} Lucky Winner(s)</value>
    <comment>{0} Lucky Winner(s)</comment>
  </data>
  <data name="InfoBar_Running" xml:space="preserve">
    <value>{0} | {1} | {2}</value>
    <comment>{0} | {1} | {2}</comment>
  </data>
  <data name="InfoBar_Stopped" xml:space="preserve">
    <value>Next: {0} | {1}</value>
    <comment>Next: {0} | {1}</comment>
  </data>
  <data name="Report_Date" xml:space="preserve">
    <value>Report Date</value>
    <comment>Report Date</comment>
  </data>
  <data name="Report_Index" xml:space="preserve">
    <value>Index</value>
    <comment>Index</comment>
  </data>
  <data name="Report_Ratio" xml:space="preserve">
    <value>Winner Ratio</value>
    <comment>Winner Ratio</comment>
  </data>
  <data name="Report_TimeStamp" xml:space="preserve">
    <value>Time Stamp</value>
    <comment>Time Stamp</comment>
  </data>
  <data name="Report_Title" xml:space="preserve">
    <value>Event Report</value>
    <comment>Event Report</comment>
  </data>
  <data name="Report_Total_Audiance" xml:space="preserve">
    <value>Total Audiance</value>
    <comment>Total Audiance</comment>
  </data>
  <data name="Report_Total_Round" xml:space="preserve">
    <value>Total Round</value>
    <comment>Total Round</comment>
  </data>
  <data name="Report_Total_Winner" xml:space="preserve">
    <value>Total Winner</value>
    <comment>Total Winner</comment>
  </data>
  <data name="Restart_App_Reset" xml:space="preserve">
    <value>We will restart the application to reset all settings</value>
    <comment>We will restart the application to reset all settings</comment>
  </data>
  <data name="RoundTitleText.Header" xml:space="preserve">
    <value>Custom Round Title</value>
    <comment>Custom Round Title</comment>
  </data>
  <data name="SettingPanel_BackgroundText.Text" xml:space="preserve">
    <value>Background Style</value>
    <comment>Background Style</comment>
  </data>
  <data name="SettingPanel_ColorPicker.PlaceholderText" xml:space="preserve">
    <value>Pick a color</value>
    <comment>Pick a color</comment>
  </data>
  <data name="SettingPanel_Context_Apply.Label" xml:space="preserve">
    <value>Apply</value>
    <comment>Apply</comment>
  </data>
  <data name="SettingPanel_Context_Delete.Label" xml:space="preserve">
    <value>Delete</value>
    <comment>Delete</comment>
  </data>
  <data name="SettingPanel_DarkTheme.Text" xml:space="preserve">
    <value>Dark Theme</value>
    <comment>Dark Theme</comment>
  </data>
  <data name="SettingPanel_EventTitle.Header" xml:space="preserve">
    <value>Event Title</value>
    <comment>Event Title</comment>
  </data>
  <data name="SettingPanel_EventTitle.PlaceholderText" xml:space="preserve">
    <value>Enter your event name</value>
    <comment>Enter your event name</comment>
  </data>
  <data name="SettingPanel_EventTitle_AlignCenter.Text" xml:space="preserve">
    <value>Align Center</value>
    <comment>Align Center</comment>
  </data>
  <data name="SettingPanel_EventTitle_AlignLeft.Text" xml:space="preserve">
    <value>Align Left</value>
    <comment>Align Left</comment>
  </data>
  <data name="SettingPanel_EventTitle_AlignRight.Text" xml:space="preserve">
    <value>Align Right</value>
    <comment>Align Right</comment>
  </data>
  <data name="SettingPanel_EventTitle_None.Text" xml:space="preserve">
    <value>Hide Title</value>
    <comment>Hide Title</comment>
  </data>
  <data name="SettingPanel_ForegroundText.Text" xml:space="preserve">
    <value>Foreground Theme</value>
    <comment>Foreground Theme</comment>
  </data>
  <data name="SettingPanel_LightTheme.Text" xml:space="preserve">
    <value>Light Theme</value>
    <comment>Light Theme</comment>
  </data>
  <data name="SettingPanel_RandomColorToggle.Header" xml:space="preserve">
    <value>Color of Winner</value>
    <comment>Color of Winner</comment>
  </data>
  <data name="SettingPanel_RandomColorToggle.OffContent" xml:space="preserve">
    <value>Custom Color</value>
    <comment>Custom Color</comment>
  </data>
  <data name="SettingPanel_RandomColorToggle.OnContent" xml:space="preserve">
    <value>Random Color</value>
    <comment>Random Color</comment>
  </data>
  <data name="SettingPanel_ThemeMsg.Text" xml:space="preserve">
    <value>*Please restart the application to apply this theme!*</value>
    <comment>*Please restart the application to apply this theme!*</comment>
  </data>
  <data name="SettingPanel_WinnerControl.MajorValue" xml:space="preserve">
    <value>Sample</value>
    <comment>Sample</comment>
  </data>
  <data name="SettingTitle_Event_Appearance" xml:space="preserve">
    <value>Visual Appearance</value>
    <comment>Visual Appearance</comment>
  </data>
  <data name="SettingTitle_Event_Data" xml:space="preserve">
    <value>Data Source</value>
    <comment>Data Source</comment>
  </data>
  <data name="SettingTitle_Event_Support" xml:space="preserve">
    <value>Misc</value>
    <comment>Misc</comment>
  </data>
  <data name="Support_Link_Email.Content" xml:space="preserve">
    <value>Feedback and Suggestion</value>
    <comment>Feedback and Suggestion</comment>
  </data>
  <data name="Support_Link_FTUE.Content" xml:space="preserve">
    <value>What's highlights, tips and new features</value>
    <comment>What's highlights ,tips and new features</comment>
  </data>
  <data name="Support_Link_Reset.Content" xml:space="preserve">
    <value>Reset all settings</value>
    <comment>Reset all settings</comment>
  </data>
</root>