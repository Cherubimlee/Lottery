<UserControl
    x:Class="LottoryUWP.SettingWidgets.AppearanceSettingPane"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LottoryUWP.SettingWidgets"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:controls ="using:LottoryUWP.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <Grid>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Uid="SettingPanel_EventTitle" Header="Event Title"  Text="{Binding DataContext.EventTitle, Mode=TwoWay}" PlaceholderText="Enter your event name" Height="60"/>

                <ComboBox x:Name="EventTitleCombobox" Grid.Column="2" VerticalAlignment="Bottom" SelectedIndex="{Binding DataContext.EventTitleState, Mode=TwoWay, Converter={StaticResource TextPositionStateToIntConverter}}">
                    <ComboBoxItem>
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="AlignLeft"/>
                            <TextBlock x:Uid="SettingPanel_EventTitle_AlignLeft" Text="Alien Left" Margin="8,0"/>
                        </StackPanel>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="AlignCenter"/>
                            <TextBlock x:Uid="SettingPanel_EventTitle_AlignCenter" Text="Alien Center"  Margin="8,0"/>
                        </StackPanel>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="AlignRight"/>
                            <TextBlock x:Uid="SettingPanel_EventTitle_AlignRight" Text="Alien Right"  Margin="8,0"/>
                        </StackPanel>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Remove"/>
                            <TextBlock x:Uid="SettingPanel_EventTitle_None" Text="Hide Title"  Margin="8,0"/>
                        </StackPanel>
                    </ComboBoxItem>
                </ComboBox>
            </Grid>
       

        <Grid Margin="0,8,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0">
                    <ToggleSwitch x:Uid="SettingPanel_RandomColorToggle" x:Name="RandomColorToggle" Header="Color of Winner" OffContent="Custom Color" OnContent="Random Color" IsOn="{Binding DataContext.IsWinnerColorRandom, Mode=TwoWay}" Toggled="RandomColorToggle_Toggled" />
                <ComboBox  x:Uid="SettingPanel_ColorPicker"  x:Name="ColorPicker" PlaceholderText="Pick a color"  Margin="0,8"  ItemsSource="{Binding ColorList}" Visibility="{Binding IsOn, ElementName=RandomColorToggle, Converter={StaticResource OppositeBooleanToVisibilityConverter}}" SelectionChanged="ComboBox_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                      
                                    <Border  Width="16" Height="16" BorderBrush="{ThemeResource ThumbBorderThemeBrush}" BorderThickness="1" CornerRadius="3">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding ColorObj}"/>
                                        </Border.Background>
                                    </Border>

                                    <TextBlock Text="{Binding Name}" Margin="8,0" ></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                </StackPanel>

                <Viewbox Grid.Column="2" >
                    <controls:WinnerControl x:Uid="SettingPanel_WinnerControl"  x:Name="SampleWinner"  MajorValue="Sample"  HorizontalAlignment="Center" Tapped="SampleWinner_Tapped"/>
                </Viewbox>
             
            </Grid>
            <TextBlock x:Uid="SettingPanel_ForegroundText"  Text="Foreground Theme" Margin="0,8,0,0"/>
            <Grid  Margin="0,8,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <RadioButton  x:Name="LightRadioBtn"  Checked="RadioBtn_Checked" >
                    <StackPanel Orientation="Horizontal">
                        <Border  Width="16" Height="16" Background="White" BorderBrush="{ThemeResource ThumbBorderThemeBrush}" BorderThickness="1" CornerRadius="3"/>
                        <TextBlock x:Uid="SettingPanel_LightTheme" Text="Light Theme" Margin="8,0"></TextBlock>
                    </StackPanel>
                </RadioButton>
                <RadioButton Grid.Column="1"  x:Name="DarkRadioBtn"  Checked="RadioBtn_Checked">
                    <StackPanel Orientation="Horizontal">
                        <Border  Width="16" Height="16" Background="Black" BorderBrush="{ThemeResource ThumbBorderThemeBrush}" BorderThickness="1" CornerRadius="3">
                        </Border>
                        <TextBlock  x:Uid="SettingPanel_DarkTheme"   Text="Dark Theme" Margin="8,0"></TextBlock>
                    </StackPanel>
                </RadioButton>
            </Grid>
            <TextBlock x:Name="themeMsg" x:Uid="SettingPanel_ThemeMsg" Text="*Please restart the application to apply this theme!*" 
                       TextWrapping="WrapWholeWords" Foreground="Red" 
                       FontStyle="Italic" FontWeight="Light"
                       Margin="0,8,0,0" Visibility="Collapsed"/>
            <Grid Margin="0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Uid="SettingPanel_BackgroundText"  Text="Background Style" />

                <Button  Grid.Column="1" Background="Transparent" Width="24" Height="24" Click="AddButton_Click">
                    <Viewbox Margin="-8">
                        <SymbolIcon  Symbol="BrowsePhotos"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Viewbox >
                </Button>


            </Grid>
          
            <GridView x:Name="BackgroudSelectorView" ItemsSource="{Binding DataContext.BackgroundBrushModels}" ItemClick="GridView_ItemClick" IsItemClickEnabled="True" SelectionMode="None" >
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Border Height="48" Width="48" BorderBrush="{ThemeResource ThumbBorderThemeBrush}" BorderThickness="1" Background="{Binding BrushObj}" CornerRadius="8" >
                                <Border.ContextFlyout>
                                    <Flyout>
                                        <StackPanel Orientation="Horizontal">
                                            <AppBarButton Icon="Accept" x:Uid="SettingPanel_Context_Apply"  Label="Apply"  Click="ApplyAppBarButton_Click"/>
                                            <AppBarButton Icon="Delete" x:Uid="SettingPanel_Context_Delete" Label="Delete"  Click="DeleteAppBarButton_Click" IsEnabled="{Binding IsAllowDelete}" />
                                        </StackPanel>
                                    </Flyout>
                                </Border.ContextFlyout>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>

            

        </StackPanel>
    </Grid>
</UserControl>
